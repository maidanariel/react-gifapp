{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCat","useState","inputValue","setValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EAENC,mBAAS,IAFH,mBAE9BC,EAF8B,KAElBC,EAFkB,KAqBrC,OACI,0BAAMC,SAbU,SAACC,GACjBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAO,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OAC7BN,EAAS,OAQT,2BAAOO,KAAO,OACdC,MAAST,EACTU,SArBY,SAACP,GACjBF,EAASE,EAAEQ,OAAOF,YCNbG,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEjC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAKG,IAAKJ,IACrB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,8DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAabY,GAba,4CAAH,sDCIPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EACXpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAqBrC,OAdAC,qBAAW,WACPlB,EAASC,GACRkB,MAAO,SAAAT,GAEJO,EAAS,CACLV,KAAMG,EACNK,SAAS,SAKnB,CAACd,IAGIe,EDjBwBI,CAAcnB,GAAhCW,EAHsB,EAG3BL,KAAYQ,EAHe,EAGfA,QAEpB,OACI,oCACI,wBAAIlB,UAAU,qCAAqCI,GAClDc,GAAW,uBAAGlB,UAAU,oCAAb,eACZ,yBAAKA,UAAU,aAEPe,EAAOH,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAW,IAAOX,EAAIC,IACHD,UEfnBY,EAAe,WAAO,IAAD,EAERzC,mBAAS,CAAC,SAFF,mBAEvBQ,EAFuB,KAElBT,EAFkB,KAK9B,OACI,oCACE,4CACA,kBAAC,EAAD,CAAaA,OAAQA,IACrB,6BAEA,4BAEQS,EAAIoB,KAAI,SAAAR,GAAQ,OAChB,kBAAC,EAAD,CAASoB,IAAOpB,EAAUA,SAAWA,UCbvDsB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a08fad95.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCat}) => {\n\n    const [inputValue, setValue] = useState('');        \n    \n    const handleInput = (e) =>{\n        setValue(e.target.value);\n\n    }\n\n    const handleSubmit= (e) =>{\n        e.preventDefault();\n      \n\n        if(inputValue.trim().length > 2){\n            setCat(cat => [inputValue,...cat ]);\n            setValue('');\n        }\n\n\n    }\n    \n    return (\n        <form onSubmit= {handleSubmit}>\n            <input type = \"text\" \n            value = {inputValue}\n            onChange = {handleInput}\n            ></input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCat : PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ title, url}) => {\n   \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src= {url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}","\nexport const getGifs = async( category ) =>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category)}&limit=5&api_key=IS4F4YD8yWq17BVaORddxLXHEHVtruXW`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n    const gifs = data.map(img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n            \n        }\n    })\n   return gifs;\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n\nexport const GifGrid = ({category}) => {\n\n \n    const { data:images,loading} = useFetchGifs( category );\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map( img=>(\n                        <GifGridItem \n                        key = {img.id}\n                            {...img} />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/getGifs'\n\n\nexport const useFetchGifs = (category) =>{\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    \n    useEffect( () => {\n        getGifs( category )\n        .then ( img => {\n        \n            setState({\n                data: img,\n                loading: false\n            });\n        \n        })\n\n    },[category])\n \n\n    return state;\n}","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [cat, setCat] = useState(['Goku']);\n\n    \n    return (\n        <>\n          <h2>GifExpertApp</h2>\n          <AddCategory setCat={setCat}/>\n          <hr></hr>  \n\n          <ol>\n              {\n                  cat.map(category => (\n                  <GifGrid key = {category} category={ category}/>))\n              }\n          </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  \n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n//IS4F4YD8yWq17BVaORddxLXHEHVtruXW"],"sourceRoot":""}